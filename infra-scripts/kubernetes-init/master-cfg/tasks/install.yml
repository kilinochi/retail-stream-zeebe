---
- name: Reset kubeadm
  shell: "kubeadm reset --force"

- name: Initializate cluster
  command: kubeadm init --apiserver-advertise-address="192.168.50.101" --apiserver-cert-extra-sans="192.168.50.101"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16
  register: master_initialization
  run_once: true

- name: Create .kube directory
  become_user: vagrant
  file:
    remote_src: yes
    path: /home/vagrant/.kube
    state: directory
    mode: 0755

- name: Copy admin conf to user's kube conf
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant

- name: Install Pod network
  shell: "kubectl -n kube-system apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt"
  args:
    creates: pod_network_setup.txt
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"

- name: Install Dashboard
  shell: "kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml"
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"

- name: Curl helm
  shell: "curl https://baltocdn.com/helm/signing.asc | sudo apt-key add - "
  args:
    warn: no

- name: Install apt-transport-https
  apt:
    force: yes
    name: apt-transport-https
    state: present

- name: Create helm source list
  become_user: root
  file:
    path: /etc/apt/sources.list.d/helm-stable-debian.list
    state: touch
    mode: 0755

- name: Configurate helm source list
  shell: "echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list"

- name: Update Cache
  apt: update_cache=yes

- name: Install helm
  shell: "curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > install-helm.sh"
  args:
    warn: no

- name: Change permission for helm .sh
  become_user: root
  #win_owner: vagrant
  file:
    dest: install-helm.sh
    mode: 755
    owner: vagrant

- name: Execute helm script
  shell: "sudo ./install-helm.sh"

- name: Define ServiceAccount name for Tiller
  set_fact:
    tiller_service_account_name: "tiller"

- name: Install Tiller
  shell: "helm init --service-account {{ tiller_service_account_name }}"
  register: helm_init_result
  become_user: vagrant
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"

- name: Show helm init result
  debug:
    msg: "{{ helm_init_result.stdout_lines }}"

- name: Tiller upgrade
  command: helm init --upgrade
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"

#- name: Create the tiller service account
#  command: kubectl -n kube-system create serviceaccount tiller
#  environment:
#    KUBECONFIG: "/home/vagrant/.kube/config"

#- name: Bind the tiller serviceaccount to the cluster-admin role
#  command: kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
#  environment:
#    KUBECONFIG: "/home/vagrant/.kube/config"

#- name: Deploy tiller
#  command:
#  environment:
#    KUBECONFIG: "/home/vagrant/.kube/config"

# name: Describe pod tiller-deploy
#  command: kubectl describe pod tiller-deploy -n kube-system
#  environment:
#    KUBECONFIG: "/home/vagrant/.kube/config"

- name: Install calico pod network
  become: false
  shell: "kubectl apply -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml"
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"

- name: Create join file
  become_user: vagrant
  file:
    path: /home/vagrant/join_command.txt
    mode: 777
    state: touch

- name: Generate join command
  shell: "kubeadm token create --print-join-command | tee /home/vagrant/join_command.txt"
  register: join_command_raw

#- name: Copy join command to local file
#  become: false
#  local_action: copy content="{{ join_command_raw.stdout_lines[0] }}" dest="./join-command"

- name: Set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"